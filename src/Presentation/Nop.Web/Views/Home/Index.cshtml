@using Nop.Core.Domain.Seo
@inject SeoSettings seoSettings

@{
    Layout = "_ColumnsOne";

    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        NopHtml.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        NopHtml.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    NopHtml.AppendPageCssClassParts("html-home-page");
}

    <style>

    #map {
  width:100%;
  height:250px;
}
   .labels {
     color: red;
     background-color: white;
     font-family: "Lucida Grande", "Arial", sans-serif;
     font-size: 10px;
     font-weight: bold;
     text-align: center;
     width: 80px;     
     border: 2px solid black;
     white-space: nowrap;
   }
    </style>
<div class="page home-page">
    <div class="page-body">
        <div class="product-social-buttons">
    <script   asp-location="None" src="https://maps.googleapis.com/maps/api/js?&sensor=false&v=3&key=AIzaSyCNQrOZMXYBcGlvkXMBGeD68FQxpaQhGdw"></script>
    <script   asp-location="None" src="https://cdn.sobekdigital.com/includes/gmaps-markerwithlabel/1.9.1/gmaps-markerwithlabel-1.9.1.js"></script>
    <script asp-location="Footer"  src="~/Themes/Pacific/Content/scripts/gmapMarketWithLabel.js"> </script>
</div>
       @* @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync("HomepageProducts")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync("HomepageBestSellers")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })*@
    </div>
</div>
