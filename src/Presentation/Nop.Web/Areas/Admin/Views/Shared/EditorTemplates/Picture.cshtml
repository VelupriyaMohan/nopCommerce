@model int
@inject IPictureService pictureService

@using Nop.Core;
@using Nop.Services.Media
@using Nop.Web.Framework.UI;

@{
    //other variables
    var random = CommonHelper.GenerateRandomInteger();
    var clientId = "picture" + random;
    var picture = await pictureService.GetPictureByIdAsync(Model);

    const int pictureSize = 100;
}

@* register CSS and JS *@
<link rel="stylesheet" href="~/lib_npm/fine-uploader/fine-uploader/fine-uploader.min.css" />
<script asp-exclude-from-bundle="true" src="~/lib_npm/fine-uploader/jquery.fine-uploader/jquery.fine-uploader.min.js" asp-location="Footer"></script>

<div id="@(clientId + "value")">
    <input type="hidden" asp-for="@Model" />
</div>
<div class="upload-picture-block">
    <div class="picture-container">
        <div id="@(clientId + "image")" class="uploaded-image">
            <img src="@(await pictureService.GetPictureUrlAsync(Model, pictureSize, true))" />
        </div>
    </div>
    <div class="upload-button-container">
        @*fine uploader container*@
        <div id="@clientId" class="upload-image-button float-left px-md-1">
            <noscript>
                <p>Please enable JavaScript to use file uploader.</p>
            </noscript>
        </div>
        <div class="remove-image-button float-left px-md-1">
            @if (picture != null)
            {
                <span id="@(clientId + "remove")" class="btn btn-danger">@T("Admin.Picture.RemovePicture")</span>
            }
            else

            {
                <span id="@(clientId + "remove")" class="btn btn-danger" style="display: none;">@T("Admin.Picture.RemovePicture")</span>
            }
        </div>
    </div>
   


</div>

@*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
<script type="text/template" id="@(clientId)-qq-template">
    <div class="qq-uploader-selector qq-uploader">
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span>@T("Common.FileUploader.DropFiles")</span>
        </div>
        <div class="qq-upload-button-selector btn bg-gradient-green">
            <div>@T("Common.FileUploader.Upload")</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>@T("Common.FileUploader.Processing")</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>3+
        </span>
        <ul class="qq-upload-list-selector qq-upload-list">
            <li>
                <div class="qq-progress-bar-container-selector">
                    <div class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
                <span class="qq-upload-file-selector qq-upload-file"></span>
                <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                <span class="qq-upload-size-selector qq-upload-size"></span>
                <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">@T("Common.FileUploader.Cancel")</a>
                <a class="qq-upload-retry-selector qq-upload-retry" href="#">@T("Common.FileUploader.Retry")</a>
                <a class="qq-upload-delete-selector qq-upload-delete" href="#">@T("Common.FileUploader.Delete")</a>
                <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
            </li>
        </ul>
    </div>
</script>
<script>
    $(document).ready(function() {
        $("#@(clientId)").fineUploader({
            request: {
                endpoint: '@(Url.Content("~/Admin/Picture/AsyncUpload"))'
            },
            template: "@(clientId)-qq-template",
            multiple: false,
            validation: {
                allowedExtensions: [ "bmp", "gif", "jpeg", "jpg", "jpe", "jfif", "pjpeg", "pjp", "png", "tiff", "tif", "webp"]
            }
        }).on("complete", function(event, id, name, responseJSON, xhr) {
            if (responseJSON.success) {
                $("#@(clientId + "image")").html("<img src='" + responseJSON.imageUrl + "'/>");
                $("#@(clientId + "value") input").val(responseJSON.pictureId);
                $("#@(clientId + "remove")").show();
            }
        });
        $("#@(clientId + "remove")").click(function(e) {
            $("#@(clientId + "image")").html("<img src='@await pictureService.GetDefaultPictureUrlAsync(pictureSize)'/>");
            $("#@(clientId + "value") input").val(0);
            $("#@(clientId) .qq-upload-list-selector").empty();
            $(this).hide();
        });
    });
</script>
 <br/><br/>
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/foundation/5.5.0/css/foundation.css" />
                                 <script async src="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/js/foundation.min.js"> </script>
                                            <script async src="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/js/foundation/foundation.clearing.js"> </script>
                                              <script async src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"> </script>
<div class="row">
  <div class="colummns large-12">
    <div class="row">
    <div class="large-4 columns">
      <h4>Image Gallery</h4>
      <br/>
      <ul id="photos_clearing" class="clearing-thumbs" data-clearing>
      </ul>
      <br/>
      <label for='photos'>Add some pics?:</label>
      <input type="file" id="photos" name="photos[]" multiple/>
    </div>
  </div>
  </div>
</div>
<script>
    (function() {
  // Display the images to be uploaded.
  var multiPhotoDisplay;

  $('#photos').on('change', function(e) {
    return multiPhotoDisplay(this);
  });

  this.readURL = function(input) {
    var reader;
    
    // Read the contents of the image file to be uploaded and display it.

    if (input.files && input.files[0]) {
      reader = new FileReader();
      reader.onload = function(e) {
        var $preview;
        $('.image_to_upload').attr('src', e.target.result);
        $preview = $('.preview');
        if ($preview.hasClass('hide')) {
          return $preview.toggleClass('hide');
        }
      };
      return reader.readAsDataURL(input.files[0]);
    }
  };

  multiPhotoDisplay = function(input) {
    var file, i, len, reader, ref;
    
    // Read the contents of the image file to be uploaded and display it.

    if (input.files && input.files[0]) {
      ref = input.files;
      for (i = 0, len = ref.length; i < len; i++) {
        file = ref[i];
        reader = new FileReader();
        reader.onload = function(e) {
          var image_html;
          image_html = `<li><a class="th" href="${e.target.result}"><img width="75" src="${e.target.result}"></a></li>`;
          $('#photos_clearing').append(image_html);
          if ($('.pics-label.hide').length !== 0) {
            $('.pics-label').toggle('hide').removeClass('hide');
          }
          return $(document).foundation('reflow');
        };
        reader.readAsDataURL(file);
      }
      window.post_files = input.files;
      if (window.post_files !== void 0) {
        return input.files = $.merge(window.post_files, input.files);
      }
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiPGFub255bW91cz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQW9DO0VBQUE7QUFBQSxNQUFBOztFQUNwQyxDQUFBLENBQUUsU0FBRixDQUFZLENBQUMsRUFBYixDQUFnQixRQUFoQixFQUEwQixRQUFBLENBQUMsQ0FBRCxDQUFBO1dBQ3hCLGlCQUFBLENBQWtCLElBQWxCO0VBRHdCLENBQTFCOztFQUdBLElBQUMsQ0FBQSxPQUFELEdBQVcsUUFBQSxDQUFDLEtBQUQsQ0FBQTtBQUNYLFFBQUEsTUFBQTs7OztJQUdFLElBQUksS0FBSyxDQUFDLEtBQU4sSUFBZSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUQsQ0FBOUI7TUFDRSxNQUFBLEdBQVMsSUFBSSxVQUFKLENBQUE7TUFFVCxNQUFNLENBQUMsTUFBUCxHQUFnQixRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ3BCLFlBQUE7UUFBTSxDQUFBLENBQUUsa0JBQUYsQ0FBcUIsQ0FBQyxJQUF0QixDQUEyQixLQUEzQixFQUFrQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQTNDO1FBQ0EsUUFBQSxHQUFXLENBQUEsQ0FBRSxVQUFGO1FBQ1gsSUFBRyxRQUFRLENBQUMsUUFBVCxDQUFrQixNQUFsQixDQUFIO2lCQUNFLFFBQVEsQ0FBQyxXQUFULENBQXFCLE1BQXJCLEVBREY7O01BSGM7YUFNaEIsTUFBTSxDQUFDLGFBQVAsQ0FBcUIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFELENBQWhDLEVBVEY7O0VBSlM7O0VBZVgsaUJBQUEsR0FBb0IsUUFBQSxDQUFDLEtBQUQsQ0FBQTtBQUNwQixRQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLE1BQUEsRUFBQSxHQUFBOzs7O0lBR0UsSUFBSSxLQUFLLENBQUMsS0FBTixJQUFlLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBRCxDQUE5QjtBQUNFO01BQUEsS0FBQSxxQ0FBQTs7UUFDRSxNQUFBLEdBQVMsSUFBSSxVQUFKLENBQUE7UUFFVCxNQUFNLENBQUMsTUFBUCxHQUFnQixRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ3RCLGNBQUE7VUFBUSxVQUFBLEdBQWEsQ0FBQSx3QkFBQSxDQUFBLENBQTZCLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBdEMsQ0FBQSx1QkFBQSxDQUFBLENBQXNFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBL0UsQ0FBQSxXQUFBO1VBRWIsQ0FBQSxDQUFFLGtCQUFGLENBQXFCLENBQUMsTUFBdEIsQ0FBNkIsVUFBN0I7VUFFQSxJQUFHLENBQUEsQ0FBRSxrQkFBRixDQUFxQixDQUFDLE1BQXRCLEtBQWdDLENBQW5DO1lBQ0UsQ0FBQSxDQUFFLGFBQUYsQ0FBZ0IsQ0FBQyxNQUFqQixDQUF3QixNQUF4QixDQUErQixDQUFDLFdBQWhDLENBQTRDLE1BQTVDLEVBREY7O2lCQUdBLENBQUEsQ0FBRSxRQUFGLENBQVcsQ0FBQyxVQUFaLENBQXVCLFFBQXZCO1FBUmM7UUFVaEIsTUFBTSxDQUFDLGFBQVAsQ0FBcUIsSUFBckI7TUFiRjtNQWVBLE1BQU0sQ0FBQyxVQUFQLEdBQW9CLEtBQUssQ0FBQztNQUMxQixJQUFHLE1BQU0sQ0FBQyxVQUFQLEtBQXFCLE1BQXhCO2VBQ0UsS0FBSyxDQUFDLEtBQU4sR0FBYyxDQUFDLENBQUMsS0FBRixDQUFRLE1BQU0sQ0FBQyxVQUFmLEVBQTJCLEtBQUssQ0FBQyxLQUFqQyxFQURoQjtPQWpCRjs7RUFKa0I7QUFuQmdCIiwic291cmNlc0NvbnRlbnQiOlsiIyBEaXNwbGF5IHRoZSBpbWFnZXMgdG8gYmUgdXBsb2FkZWQuXG4kKCcjcGhvdG9zJykub24gJ2NoYW5nZScsIChlKSAtPlxuICBtdWx0aVBob3RvRGlzcGxheSh0aGlzKTtcblxuQHJlYWRVUkwgPSAoaW5wdXQpIC0+XG4gICNcbiAgIyBSZWFkIHRoZSBjb250ZW50cyBvZiB0aGUgaW1hZ2UgZmlsZSB0byBiZSB1cGxvYWRlZCBhbmQgZGlzcGxheSBpdC5cbiAgI1xuICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pXG4gICAgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuXG4gICAgcmVhZGVyLm9ubG9hZCA9IChlKSAtPlxuICAgICAgJCgnLmltYWdlX3RvX3VwbG9hZCcpLmF0dHIoJ3NyYycsIGUudGFyZ2V0LnJlc3VsdClcbiAgICAgICRwcmV2aWV3ID0gJCgnLnByZXZpZXcnKVxuICAgICAgaWYgJHByZXZpZXcuaGFzQ2xhc3MoJ2hpZGUnKVxuICAgICAgICAkcHJldmlldy50b2dnbGVDbGFzcygnaGlkZScpO1xuXG4gICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoaW5wdXQuZmlsZXNbMF0pO1xuICAgIFxubXVsdGlQaG90b0Rpc3BsYXkgPSAoaW5wdXQpIC0+XG4gICNcbiAgIyBSZWFkIHRoZSBjb250ZW50cyBvZiB0aGUgaW1hZ2UgZmlsZSB0byBiZSB1cGxvYWRlZCBhbmQgZGlzcGxheSBpdC5cbiAgI1xuICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pXG4gICAgZm9yIGZpbGUgaW4gaW5wdXQuZmlsZXNcbiAgICAgIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKClcblxuICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSAtPlxuICAgICAgICBpbWFnZV9odG1sID0gXCJcIlwiPGxpPjxhIGNsYXNzPVwidGhcIiBocmVmPVwiI3tlLnRhcmdldC5yZXN1bHR9XCI+PGltZyB3aWR0aD1cIjc1XCIgc3JjPVwiI3tlLnRhcmdldC5yZXN1bHR9XCI+PC9hPjwvbGk+XCJcIlwiXG5cbiAgICAgICAgJCgnI3Bob3Rvc19jbGVhcmluZycpLmFwcGVuZChpbWFnZV9odG1sKVxuXG4gICAgICAgIGlmICQoJy5waWNzLWxhYmVsLmhpZGUnKS5sZW5ndGggIT0gMFxuICAgICAgICAgICQoJy5waWNzLWxhYmVsJykudG9nZ2xlKCdoaWRlJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKVxuXG4gICAgICAgICQoZG9jdW1lbnQpLmZvdW5kYXRpb24oJ3JlZmxvdycpXG5cbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpXG5cbiAgICB3aW5kb3cucG9zdF9maWxlcyA9IGlucHV0LmZpbGVzXG4gICAgaWYgd2luZG93LnBvc3RfZmlsZXMgIT0gdW5kZWZpbmVkXG4gICAgICBpbnB1dC5maWxlcyA9ICQubWVyZ2Uod2luZG93LnBvc3RfZmlsZXMsIGlucHV0LmZpbGVzKSJdfQ==
//# sourceURL=coffeescript
</script>

